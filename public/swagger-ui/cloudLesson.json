{
	"swagger": "2.0",
	"info": {
		"description": "This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.",
		"version": "1.0.0",
		"title": "云课堂",
		"termsOfService": "http://swagger.io/terms/",
		"contact": {
			"email": "apiteam@swagger.io"
		},
		"license": {
			"name": "Apache 2.0",
			"url": "http://www.apache.org/licenses/LICENSE-2.0.html"
		}
	},
	"host": "192.168.50.53:8000",
	"basePath": "/v1",
	"tags": [{
		"name": "mobile",
		"description": "移动端接口",
		"externalDocs": {
			"description": "Find out more",
			"url": "http://swagger.io"
		}
	}],
	"schemes": ["http"],
	"paths": {
		"/mobile/lessonType": {
			"get": {
				"tags": ["mobile"],
				"produces": ["application/json"],
				"summary": "课程类型",
				"description": "课程类型",
				"parameters": [],
				"responses": {
					"200": {
						"description": "successful operation",
						"schema": {
							"type": "object",
							"additionalProperties": {
								"type": "integer",
								"format": "int32"
							}
						}
					}
				},
				"security": [{
					"api_key": []
				}]
			}
		},
		"/mobile/lessonTypeList": {
			"get": {
				"tags": ["mobile"],
				"produces": ["application/json"],
				"summary": "不同课程类型的列表",
				"description": "不同课程类型的列表",
				"parameters": [{
					"name": "lessonType",
					"in": "query",
					"description": "",
					"required": true,
					"type": "string"
				},{
					"name": "userCode",
					"in": "query",
					"description": "",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "successful operation",
						"schema": {
							"type": "object",
							"additionalProperties": {
								"type": "integer",
								"format": "int32"
							}
						}
					}
				},
				"security": [{
					"api_key": []
				}]
			}
		},
		
		"/mobile/hotLesson": {
			"get": {
				"tags": ["mobile"],
				"produces": ["application/json"],
				"summary": "最热课程(根据点赞量排名，前2条)",
				"description": "最热课程(根据点赞量排名，前2条)",
				"parameters": [],
				"responses": {
					"200": {
						"description": "successful operation",
						"schema": {
							"$ref": "#/definitions/Order"
						}
					},
					"400": {
						"description": "Invalid ID supplied"
					},
					"404": {
						"description": "Order not found"
					}
				}
			}
		},

		"/mobile/newLesson": {
			"get": {
				"tags": ["mobile"],
				"produces": ["application/json"],
				"summary": "最新课程(根据时间排行，前2条)",
				"description": "最新课程(根据时间排行，前2条)",
				"parameters": [],
				"responses": {
					"200": {
						"description": "successful operation",
						"schema": {
							"$ref": "#/definitions/Order"
						}
					},
					"400": {
						"description": "Invalid ID supplied"
					},
					"404": {
						"description": "Order not found"
					}
				}
			}
		},
		"/mobile/focusLesson": {
			"get": {
				"tags": ["mobile"],
				"produces": ["application/json"],
				"summary": "焦点列表(根据浏览量排行，前3条)",
				"description": "焦点列表(根据浏览量排行，前3条)",
				"parameters": [{
					"name": "userCode",
					"in": "query",
					"description": "",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "successful operation",
						"schema": {
							"$ref": "#/definitions/Order"
						}
					},
					"400": {
						"description": "Invalid ID supplied"
					},
					"404": {
						"description": "Order not found"
					}
				}
			}
		},
		"/mobile/allFocusLesson": {
			"get": {
				"tags": ["mobile"],
				"produces": ["application/json"],
				"summary": "焦点列表(全部)",
				"description": "焦点列表(全部)",
				"parameters": [{
					"name": "userCode",
					"in": "query",
					"description": "",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "successful operation",
						"schema": {
							"$ref": "#/definitions/Order"
						}
					},
					"400": {
						"description": "Invalid ID supplied"
					},
					"404": {
						"description": "Order not found"
					}
				}
			}
		},
		"/mobile/lessonDetail": {
			"get": {
				"tags": ["mobile"],
				"produces": ["application/json"],
				"summary": "课程详情页",
				"description": "课程详情页",
				"parameters": [{
					"name": "lessonId",
					"in": "query",
					"description": "",
					"required": true,
					"type": "string"
				},{
					"name": "userName",
					"in": "query",
					"description": "",
					"required": true,
					"type": "string"
				},{
					"name": "userCode",
					"in": "query",
					"description": "",
					"required": true,
					"type": "string"
				},{
					"name": "department",
					"in": "query",
					"description": "",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "successful operation",
						"schema": {
							"$ref": "#/definitions/Order"
						}
					},
					"400": {
						"description": "Invalid ID supplied"
					},
					"404": {
						"description": "Order not found"
					}
				}
			}
		},
		"/mobile/createThumbUp": {
			"post": {
				"tags": ["mobile"],
				"produces": ["application/json"],
				"summary": "创建点赞",
				"description": "创建点赞",
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "Created user object",
					"required": true,
					"schema": {
						"$ref": "#/definitions/User"
					}              
				}],
				"responses": {
					"200": {
						"description": "successful operation",
						"schema": {
							"$ref": "#/definitions/Order"
						}
					},
					"400": {
						"description": "Invalid ID supplied"
					},
					"404": {
						"description": "Order not found"
					}
				}
			},	
		},
		"/mobile/cancleThumbUp": {
			"delete": {
				"tags": ["mobile"],
				"produces": ["application/json"],
				"summary": "取消点赞",
				"description": "取消点赞",
				"operationId": "deleteUser",
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "Created user object",
					"required": true,
					"schema": {
						"$ref": "#/definitions/User"
					}              
				}],
				"responses": {
					"400": {
						"description": "Invalid username supplied"
					},
					"404": {
						"description": "User not found"
					}
				}
			}
		},
		"/mobile/createCollection": {
			"post": {
				"tags": ["mobile"],
				"produces": ["application/json"],
				"summary": "创建收藏",
				"description": "创建收藏",
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "Created user object",
					"required": true,
					"schema": {
						"$ref": "#/definitions/User"
					}              
				}],
				"responses": {
					"200": {
						"description": "successful operation",
						"schema": {
							"$ref": "#/definitions/Order"
						}
					},
					"400": {
						"description": "Invalid ID supplied"
					},
					"404": {
						"description": "Order not found"
					}
				}
			},	
		},
		"/mobile/cancleCollection": {
			"delete": {
				"tags": ["mobile"],
				"produces": ["application/json"],
				"summary": "取消收藏",
				"description": "取消收藏",
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "Created user object",
					"required": true,
					"schema": {
						"$ref": "#/definitions/User"
					}              
				}],
				"responses": {
					"400": {
						"description": "Invalid username supplied"
					},
					"404": {
						"description": "User not found"
					}
				}
			}
		},
		"/mobile/lessonStudy": {
			"post": {
				"tags": ["mobile"],
				"produces": ["application/json"],
				"summary": "学习课程",
				"description": "学习课程",
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "Created user object",
					"required": true,
					"schema": {
						"$ref": "#/definitions/User"
					}              
				}],
				"responses": {
					"200": {
						"description": "successful operation",
						"schema": {
							"$ref": "#/definitions/Order"
						}
					},
					"400": {
						"description": "Invalid ID supplied"
					},
					"404": {
						"description": "Order not found"
					}
				}
			},	
		},
		"/mobile/rankTopThree": {
			"get": {
				"tags": ["mobile"],
				"produces": ["application/json"],
				"summary": "学霸榜前三",
				"description": "学霸榜前三",
				"parameters": [],
				"responses": {
					"400": {
						"description": "Invalid username supplied"
					},
					"404": {
						"description": "User not found"
					}
				}
			}
		},
		"/mobile/rankTopTwenty": {
			"get": {
				"tags": ["mobile"],
				"produces": ["application/json"],
				"summary": "学霸榜前20",
				"description": "学霸榜前20",
				"parameters": [],
				"responses": {
					"400": {
						"description": "Invalid username supplied"
					},
					"404": {
						"description": "User not found"
					}
				}
			}
		},
		"/mobile/smallCategory": {
			"get": {
				"tags": ["mobile"],
				"produces": ["application/json"],
				"summary": "专题课程的小类",
				"description": "专题课程的小类",
				"parameters": [],
				"responses": {
					"400": {
						"description": "Invalid username supplied"
					},
					"404": {
						"description": "User not found"
					}
				}
			}
		},
		"/mobile/collectionList": {
			"get": {
				"tags": ["mobile"],
				"produces": ["application/json"],
				"summary": "收藏列表",
				"description": "收藏列表",
				"parameters": [{
					"name": "userCode",
					"in": "query",
					"description": "",
					"required": true,
					"type": "string"
				},],
				"responses": {
					"400": {
						"description": "Invalid username supplied"
					},
					"404": {
						"description": "User not found"
					}
				}
			}
		},
		
		"/user/{username}": {
			"get": {
				"tags": ["user"],
				"summary": "Get user by user name",
				"description": "",
				"operationId": "getUserByName",
				"produces": ["application/json"],
				"parameters": [{
					"name": "username",
					"in": "path",
					"description": "The name that needs to be fetched. Use user1 for testing. ",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "successful operation",
						"schema": {
							"$ref": "#/definitions/User"
						}
					},
					"400": {
						"description": "Invalid username supplied"
					},
					"404": {
						"description": "User not found"
					}
				}
			},
			"put": {
				"tags": ["user"],
				"summary": "Updated user",
				"description": "This can only be done by the logged in user.",
				"operationId": "updateUser",
				"produces": ["application/xml", "application/json"],
				"parameters": [{
					"name": "username",
					"in": "path",
					"description": "name that need to be updated",
					"required": true,
					"type": "string"
				}, {
					"in": "body",
					"name": "body",
					"description": "Updated user object",
					"required": true,
					"schema": {
						"$ref": "#/definitions/User"
					}
				}],
				"responses": {
					"400": {
						"description": "Invalid user supplied"
					},
					"404": {
						"description": "User not found"
					}
				}
			},
			"delete": {
				"tags": ["user"],
				"summary": "Delete user",
				"description": "This can only be done by the logged in user.",
				"operationId": "deleteUser",
				"produces": ["application/json"],
				"parameters": [{
					"name": "username",
					"in": "path",
					"description": "The name that needs to be deleted",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"400": {
						"description": "Invalid username supplied"
					},
					"404": {
						"description": "User not found"
					}
				}
			}
		}
	},
	"securityDefinitions": {
		"petstore_auth": {
			"type": "oauth2",
			"authorizationUrl": "https://petstore.swagger.io/oauth/authorize",
			"flow": "implicit",
			"scopes": {
				"write:pets": "modify pets in your account",
				"read:pets": "read your pets"
			}
		},
		"api_key": {
			"type": "apiKey",
			"name": "api_key",
			"in": "header"
		}
	},
	"definitions": {
		"Order": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"petId": {
					"type": "integer",
					"format": "int64"
				},
				"quantity": {
					"type": "integer",
					"format": "int32"
				},
				"shipDate": {
					"type": "string",
					"format": "date-time"
				},
				"status": {
					"type": "string",
					"description": "Order Status",
					"enum": ["placed", "approved", "delivered"]
				},
				"complete": {
					"type": "boolean",
					"default": false
				}
			},
			"xml": {
				"name": "Order"
			}
		},
		"User": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"username": {
					"type": "string"
				},
				"firstName": {
					"type": "string"
				},
				"lastName": {
					"type": "string"
				},
				"email": {
					"type": "string"
				},
				"password": {
					"type": "string"
				},
				"phone": {
					"type": "string"
				},
				"userStatus": {
					"type": "integer",
					"format": "int32",
					"description": "User Status"
				}
			},
			"xml": {
				"name": "User"
			}
		},
		"Category": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"name": {
					"type": "string"
				}
			},
			"xml": {
				"name": "Category"
			}
		},
		"Tag": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"name": {
					"type": "string"
				}
			},
			"xml": {
				"name": "Tag"
			}
		},
		"Pet": {
			"type": "object",
			"required": ["name", "photoUrls"],
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"category": {
					"$ref": "#/definitions/Category"
				},
				"name": {
					"type": "string",
					"example": "doggie"
				},
				"photoUrls": {
					"type": "array",
					"xml": {
						"name": "photoUrl",
						"wrapped": true
					},
					"items": {
						"type": "string"
					}
				},
				"tags": {
					"type": "array",
					"xml": {
						"name": "tag",
						"wrapped": true
					},
					"items": {
						"$ref": "#/definitions/Tag"
					}
				},
				"status": {
					"type": "string",
					"description": "pet status in the store",
					"enum": ["available", "pending", "sold"]
				}
			},
			"xml": {
				"name": "Pet"
			}
		},
		"ApiResponse": {
			"type": "object",
			"properties": {
				"code": {
					"type": "integer",
					"format": "int32"
				},
				"type": {
					"type": "string"
				},
				"message": {
					"type": "string"
				}
			}
		}
	},
	"externalDocs": {
		"description": "Find out more about Swagger",
		"url": "http://swagger.io"
	}
}